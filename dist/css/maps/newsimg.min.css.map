{"version":3,"sources":["newsimg/newsimg.scss","newsimg/newsimg.css","../styles/helpers/_mixins-svg.scss"],"names":[],"mappings":"AAcA,0BCbA,iCCkFC,QAAA,aACA,iBAAA,uBDhFC,gBAAA,UAAA,SAGF,eDFI,SAAA,SACA,SAAA,OCIF,OAAA,KAAA,EAAA,EDDF,eAAA,KCKA,mBDAA,SAAA,SEkHE,OAAA,eD7GF,0BDFI,MAAA,SACA,OAAA,SACA,oBAAA,WAAA,WACA,YCIF,OAAA,EDDF,cAAA,EEyGE,iBAAA,YACA,QAAA,EDnGF,iCDHI,MAAA,SACA,OAAA,SACA,oBAAA,WAAA,WCKF,YACA,OAAA,EACA,cAAA,EACA,iBAAA,YACA,QAAA","file":"../newsimg.min.css","sourcesContent":["@import \"../../styles/helpers/_helpers\";\r\n\r\n.slider-swiper {\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin: 65px 0 0px;\r\n    padding-bottom: 6rem;\r\n}\r\n\r\n.swiper-pagination {\r\n    position: absolute;\r\n    bottom: 3rem !important;\r\n}\r\n\r\n.swiper-pagination-bullet {\r\n    @include svgsprite(dots);\r\n    border: none;\r\n    margin: 0;\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    opacity: 1;\r\n}\r\n\r\n.swiper-pagination-bullet-active {\r\n    @include svgsprite(dots-active);\r\n    border: none;\r\n    margin: 0;\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    opacity: 1;\r\n}",".swiper-pagination-bullet,\n.swiper-pagination-bullet-active {\n  display: inline-block;\n  background-image: url(\"../img/sprite.svg\");\n  background-size: 25.1875em 22.625em;\n}\n\n.slider-swiper {\n  position: relative;\n  overflow: hidden;\n  margin: 65px 0 0px;\n  padding-bottom: 6rem;\n}\n\n.swiper-pagination {\n  position: absolute;\n  bottom: 3rem !important;\n}\n\n.swiper-pagination-bullet {\n  width: 2.1875em;\n  height: 1.5625em;\n  background-position: -12.0625em -15.4375em;\n  border: none;\n  margin: 0;\n  border-radius: 0;\n  background-color: transparent;\n  opacity: 1;\n}\n\n.swiper-pagination-bullet-active {\n  width: 2.1875em;\n  height: 1.5625em;\n  background-position: -14.8125em -15.4375em;\n  border: none;\n  margin: 0;\n  border-radius: 0;\n  background-color: transparent;\n  opacity: 1;\n}","////\r\n/// @author Mike Street\r\n/// @group Sprite\r\n////\r\n\r\n\r\n// The following variable and function originate from the sass-mq library.\r\n// If you have already included it, you can eliminate the below\r\n// https://github.com/sass-mq/sass-mq/blob/master/_mq.scss\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n\t@if unitless($px) {\r\n\t\t@warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n\t\t@return mq-px2em($px + 0px); // That may fail.\r\n\t}\r\n\r\n\t@else if unit($px)==em {\r\n\t\t@return $px;\r\n\t}\r\n\r\n\t//@return $px;\r\n\t@return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n\r\n/// Set the `$sprite` map\r\n/// @group sprite\r\n$sprite: map-get($icons, sprite) !default;\r\n\r\n/// Retrive an attributes value for a specific icon in the sprite map\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $attr - The attribute you wish to retrieve (e.g. width)\r\n@function sprite-attr($icon, $attr) {\r\n\t$newIcon: map-get($icons, $icon);\r\n\r\n\t@if $newIcon==null {\r\n\t\t@warn \"Can't find an icon with the name #{$icon}\";\r\n\t}\r\n\r\n\t@return map-get($newIcon, $attr);\r\n}\r\n\r\n/// Create a map with the specified icon of attributes\r\n/// @param {string} $icon - The name of the icon\r\n@function icon-attr($icon) {\r\n\t$attr: (width: sprite-attr($icon, width),\r\n\t\t\theight: sprite-attr($icon, height),\r\n\t\t\tx: sprite-attr($icon, backgroundX),\r\n\t\t\ty: sprite-attr($icon, backgroundY));\r\n\r\n\t@return $attr;\r\n}\r\n\r\n/// Get the width of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_width($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, width));\r\n}\r\n\r\n/// Get the height of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_height($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, height));\r\n}\r\n\r\n/// Assign the correct SVG background image and dimensions to the element\r\n%svgsprite {\r\n\tdisplay: inline-block;\r\n\tbackground-image: url(map-get($sprite, svgPath));\r\n\tbackground-size: mq-px2em(map-get($sprite, width)) mq-px2em(map-get($sprite, height));\r\n}\r\n\r\n\r\n/// Add an SVG sprite icon using em positioning\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $type [all] - The properties wanted (can be `all`, `size` or `bg`).\r\n/// - `all` ensures the icon has the background, position and size.\r\n/// - `size` is just for dimensions\r\n/// - `bg` just  applies the backgrounds to an element\r\n/// @example scss - Usage\r\n/// .class {\r\n/// \t@include sprite(arrow);\r\n/// \t&:hover {\r\n/// \t\t@include sprite(arrowDown, bg)\r\n/// \t}\r\n/// }\r\n///\r\n/// @example css - Output\r\n/// .class {\r\n/// \tdisplay: inline-block;\r\n/// \tbackground-image: url(\"../img/sprite.svg\");\r\n/// \tbackground-size: 34.25em 32.1875em;\r\n/// }\r\n///\r\n///\r\n/// .class {\r\n/// \twidth: 1.3125em;\r\n/// \theight: 1.3125em;\r\n/// \tbackground-position: -0.3125em -0.3125em;\r\n/// }\r\n/// .class:hover {\r\n/// \tbackground-position: -2.25em -2.25em;\r\n/// }\r\n@mixin svgsprite($icon, $type: all) {\r\n\t@if $type==all {\r\n\t\t// Shares the backgrounds\r\n\t\t@extend %svgsprite;\r\n\t}\r\n\r\n\t$iconMap: icon-attr($icon);\r\n\r\n\t// Outputs dimensions in em\r\n\t@if $type==all or $type==size {\r\n\t\twidth: mq-px2em(map-get($iconMap, width) + 1);\r\n\t\theight: mq-px2em(map-get($iconMap, height) + 1);\r\n\t}\r\n\r\n\t// Outputs background position in em\r\n\t@if $type==all or $type==bg {\r\n\t\tbackground-position: mq-px2em(map-get($iconMap, x) - 5) mq-px2em(map-get($iconMap, y) - 5);\r\n\t}\r\n}"]}